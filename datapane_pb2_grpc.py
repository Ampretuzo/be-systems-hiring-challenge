# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import datapane_pb2 as datapane__pb2


class MainStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Start = channel.unary_unary(
            "/Main/Start",
            request_serializer=datapane__pb2.Empty.SerializeToString,
            response_deserializer=datapane__pb2.Empty.FromString,
        )
        self.Stop = channel.unary_unary(
            "/Main/Stop",
            request_serializer=datapane__pb2.Empty.SerializeToString,
            response_deserializer=datapane__pb2.Empty.FromString,
        )
        self.Terminate = channel.unary_unary(
            "/Main/Terminate",
            request_serializer=datapane__pb2.Empty.SerializeToString,
            response_deserializer=datapane__pb2.Empty.FromString,
        )
        self.Ping = channel.unary_unary(
            "/Main/Ping",
            request_serializer=datapane__pb2.Empty.SerializeToString,
            response_deserializer=datapane__pb2.Pong.FromString,
        )
        self.Calculate = channel.unary_unary(
            "/Main/Calculate",
            request_serializer=datapane__pb2.CalculationInputs.SerializeToString,
            response_deserializer=datapane__pb2.Empty.FromString,
        )


class MainServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Start(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def Stop(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def Terminate(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def Ping(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def Calculate(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")


def add_MainServicer_to_server(servicer, server):
    rpc_method_handlers = {
        "Start": grpc.unary_unary_rpc_method_handler(
            servicer.Start,
            request_deserializer=datapane__pb2.Empty.FromString,
            response_serializer=datapane__pb2.Empty.SerializeToString,
        ),
        "Stop": grpc.unary_unary_rpc_method_handler(
            servicer.Stop,
            request_deserializer=datapane__pb2.Empty.FromString,
            response_serializer=datapane__pb2.Empty.SerializeToString,
        ),
        "Terminate": grpc.unary_unary_rpc_method_handler(
            servicer.Terminate,
            request_deserializer=datapane__pb2.Empty.FromString,
            response_serializer=datapane__pb2.Empty.SerializeToString,
        ),
        "Ping": grpc.unary_unary_rpc_method_handler(
            servicer.Ping,
            request_deserializer=datapane__pb2.Empty.FromString,
            response_serializer=datapane__pb2.Pong.SerializeToString,
        ),
        "Calculate": grpc.unary_unary_rpc_method_handler(
            servicer.Calculate,
            request_deserializer=datapane__pb2.CalculationInputs.FromString,
            response_serializer=datapane__pb2.Empty.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler("Main", rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


# This class is part of an EXPERIMENTAL API.
class Main(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Start(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/Main/Start",
            datapane__pb2.Empty.SerializeToString,
            datapane__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def Stop(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/Main/Stop",
            datapane__pb2.Empty.SerializeToString,
            datapane__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def Terminate(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/Main/Terminate",
            datapane__pb2.Empty.SerializeToString,
            datapane__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def Ping(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/Main/Ping",
            datapane__pb2.Empty.SerializeToString,
            datapane__pb2.Pong.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def Calculate(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/Main/Calculate",
            datapane__pb2.CalculationInputs.SerializeToString,
            datapane__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )
